<?xml version="1.0"?>
<robot name="sensor_asus_xtion_pro_offset" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find kobuki_description)/urdf/turtlebot_gazebo.urdf.xacro"/>
  <xacro:include filename="$(find kobuki_description)/urdf/turtlebot_properties.urdf.xacro"/>
  
  <!-- Xacro properties -->
  <xacro:property name="M_SCALE" value="0.001"/>
  <xacro:property name="asus_xtion_pro_offset_cam_py" value="-0.0125"/>
  <xacro:property name="asus_xtion_pro_offset_depth_rel_rgb_py" value="0.0270" />
  <xacro:property name="asus_xtion_pro_offset_cam_rel_rgb_py"   value="-0.0220" />

  <!-- Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
  <xacro:macro name="sensor_asus_xtion_pro_offset" params="parent namespace">
    <joint name="camera_rgb_joint" type="fixed">
      <origin xyz="${cam_px} ${asus_xtion_pro_offset_cam_py} ${cam_pz}"
              rpy="${cam_or} ${cam_op} ${cam_oy}"/>
      <parent link="${parent}"/>
      <child link="$(arg namespace)/camera_rgb_frame" />
    </joint>
    <link name="$(arg namespace)/camera_rgb_frame"/>

    <joint name="$(arg namespace)/camera_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="$(arg namespace)/camera_rgb_frame" />
      <child link="$(arg namespace)/camera_rgb_optical_frame" />
    </joint>
    <link name="$(arg namespace)/camera_rgb_optical_frame"/>

    <joint name="$(arg namespace)/camera_joint" type="fixed">
      <origin xyz="0 ${asus_xtion_pro_offset_cam_rel_rgb_py} 0" 
              rpy="0 0 0"/>
      <parent link="$(arg namespace)/camera_rgb_frame"/>
      <child link="$(arg namespace)/camera_link"/>
    </joint>
    <link name="$(arg namespace)/camera_link">
      <visual>
        <origin xyz="-0.01 0 0" rpy="${-M_PI/2} -${M_PI} ${-M_PI/2}"/>
        <geometry>
          <mesh filename="file://$(find kobuki_description)/meshes/sensors/asus_xtion_pro_live.dae" scale="${M_SCALE} ${M_SCALE} ${M_SCALE}"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
        <box size="0.0730 0.2760 0.0720"/>
      </geometry>
      </collision>
      <inertial>
        <mass value="0.170" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001152600" ixy="0.0" ixz="0.0"
                 iyy="0.000148934" iyz="0.0"
                 izz="0.001154654" />
      </inertial>
    </link>

    <joint name="$(arg namespace)/camera_depth_joint" type="fixed">
      <origin xyz="0 ${asus_xtion_pro_offset_depth_rel_rgb_py} 0" rpy="0 0 0" />
      <parent link="$(arg namespace)/camera_rgb_frame" />
      <child link="$(arg namespace)/camera_depth_frame" />
    </joint>
    <link name="$(arg namespace)/camera_depth_frame"/>

    <joint name="$(arg namespace)/camera_depth_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="$(arg namespace)/camera_depth_frame" />
      <child link="$(arg namespace)/camera_depth_optical_frame" />
    </joint>
    <link name="$(arg namespace)/camera_depth_optical_frame"/>

    <!-- RGBD sensor for simulation, same as Kinect -->
    <turtlebot_sim_3dsensor/>
  </xacro:macro>
</robot>
